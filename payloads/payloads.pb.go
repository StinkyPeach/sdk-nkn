// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payloads/payloads.proto

package payloads

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PayloadType int32

const (
	PayloadType_BINARY  PayloadType = 0
	PayloadType_TEXT    PayloadType = 1
	PayloadType_ACK     PayloadType = 2
	PayloadType_SESSION PayloadType = 3
)

var PayloadType_name = map[int32]string{
	0: "BINARY",
	1: "TEXT",
	2: "ACK",
	3: "SESSION",
}
var PayloadType_value = map[string]int32{
	"BINARY":  0,
	"TEXT":    1,
	"ACK":     2,
	"SESSION": 3,
}

func (x PayloadType) String() string {
	return proto.EnumName(PayloadType_name, int32(x))
}
func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_payloads_8ff53544ec82ba60, []int{0}
}

type Message struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Encrypted            bool     `protobuf:"varint,2,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Nonce                []byte   `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	EncryptedKey         []byte   `protobuf:"bytes,4,opt,name=encrypted_key,json=encryptedKey,proto3" json:"encrypted_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_payloads_8ff53544ec82ba60, []int{0}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Message) GetEncrypted() bool {
	if m != nil {
		return m.Encrypted
	}
	return false
}

func (m *Message) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Message) GetEncryptedKey() []byte {
	if m != nil {
		return m.EncryptedKey
	}
	return nil
}

type Payload struct {
	Type                 PayloadType `protobuf:"varint,1,opt,name=type,proto3,enum=payloads.PayloadType" json:"type,omitempty"`
	MessageId            []byte      `protobuf:"bytes,2,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Data                 []byte      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	ReplyToId            []byte      `protobuf:"bytes,4,opt,name=reply_to_id,json=replyToId,proto3" json:"reply_to_id,omitempty"`
	NoReply              bool        `protobuf:"varint,5,opt,name=no_reply,json=noReply,proto3" json:"no_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Payload) Reset()         { *m = Payload{} }
func (m *Payload) String() string { return proto.CompactTextString(m) }
func (*Payload) ProtoMessage()    {}
func (*Payload) Descriptor() ([]byte, []int) {
	return fileDescriptor_payloads_8ff53544ec82ba60, []int{1}
}
func (m *Payload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payload.Unmarshal(m, b)
}
func (m *Payload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payload.Marshal(b, m, deterministic)
}
func (dst *Payload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payload.Merge(dst, src)
}
func (m *Payload) XXX_Size() int {
	return xxx_messageInfo_Payload.Size(m)
}
func (m *Payload) XXX_DiscardUnknown() {
	xxx_messageInfo_Payload.DiscardUnknown(m)
}

var xxx_messageInfo_Payload proto.InternalMessageInfo

func (m *Payload) GetType() PayloadType {
	if m != nil {
		return m.Type
	}
	return PayloadType_BINARY
}

func (m *Payload) GetMessageId() []byte {
	if m != nil {
		return m.MessageId
	}
	return nil
}

func (m *Payload) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Payload) GetReplyToId() []byte {
	if m != nil {
		return m.ReplyToId
	}
	return nil
}

func (m *Payload) GetNoReply() bool {
	if m != nil {
		return m.NoReply
	}
	return false
}

type TextData struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TextData) Reset()         { *m = TextData{} }
func (m *TextData) String() string { return proto.CompactTextString(m) }
func (*TextData) ProtoMessage()    {}
func (*TextData) Descriptor() ([]byte, []int) {
	return fileDescriptor_payloads_8ff53544ec82ba60, []int{2}
}
func (m *TextData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TextData.Unmarshal(m, b)
}
func (m *TextData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TextData.Marshal(b, m, deterministic)
}
func (dst *TextData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TextData.Merge(dst, src)
}
func (m *TextData) XXX_Size() int {
	return xxx_messageInfo_TextData.Size(m)
}
func (m *TextData) XXX_DiscardUnknown() {
	xxx_messageInfo_TextData.DiscardUnknown(m)
}

var xxx_messageInfo_TextData proto.InternalMessageInfo

func (m *TextData) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "payloads.Message")
	proto.RegisterType((*Payload)(nil), "payloads.Payload")
	proto.RegisterType((*TextData)(nil), "payloads.TextData")
	proto.RegisterEnum("payloads.PayloadType", PayloadType_name, PayloadType_value)
}

func init() { proto.RegisterFile("payloads/payloads.proto", fileDescriptor_payloads_8ff53544ec82ba60) }

var fileDescriptor_payloads_8ff53544ec82ba60 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x91, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x4d, 0x9b, 0x76, 0x93, 0x69, 0x95, 0x30, 0x28, 0xae, 0xa0, 0xa5, 0xd4, 0x4b, 0xf5,
	0x50, 0x41, 0x4f, 0x1e, 0xab, 0xf6, 0x10, 0x8a, 0x55, 0xb6, 0x39, 0xe8, 0x29, 0xc4, 0x66, 0x10,
	0xb1, 0x66, 0x97, 0x64, 0x0f, 0x5d, 0xf0, 0xd3, 0xf8, 0x49, 0x25, 0x9b, 0x3f, 0x7a, 0x7b, 0xef,
	0xed, 0x9b, 0x9d, 0xdf, 0xb2, 0x70, 0xac, 0x12, 0xb3, 0x95, 0x49, 0x5a, 0x5c, 0x35, 0x62, 0xa6,
	0x72, 0xa9, 0x25, 0x7a, 0x8d, 0x9f, 0x7c, 0x03, 0x7b, 0xa4, 0xa2, 0x48, 0xde, 0x09, 0x39, 0xb0,
	0x3a, 0xe6, 0xce, 0xd8, 0x99, 0x0e, 0x45, 0x63, 0xf1, 0x14, 0x7c, 0xca, 0x36, 0xb9, 0x51, 0x9a,
	0x52, 0xde, 0x19, 0x3b, 0x53, 0x4f, 0xfc, 0x05, 0x78, 0x08, 0xbd, 0x4c, 0x66, 0x1b, 0xe2, 0x5d,
	0x3b, 0x55, 0x19, 0x3c, 0x87, 0xfd, 0xb6, 0x12, 0x7f, 0x92, 0xe1, 0xae, 0x3d, 0x1d, 0xb6, 0xe1,
	0x92, 0xcc, 0xe4, 0xc7, 0x01, 0xf6, 0x5c, 0x2f, 0xb9, 0x00, 0x57, 0x1b, 0x45, 0x76, 0xf7, 0xc1,
	0xf5, 0xd1, 0xac, 0x45, 0xae, 0x0b, 0x91, 0x51, 0x24, 0x6c, 0x05, 0xcf, 0x00, 0xbe, 0x2a, 0xe8,
	0xf8, 0xa3, 0x02, 0x1a, 0x0a, 0xbf, 0x4e, 0xc2, 0x14, 0x11, 0xdc, 0x34, 0xd1, 0x49, 0xcd, 0x63,
	0x35, 0x8e, 0x60, 0x90, 0x93, 0xda, 0x9a, 0x58, 0xcb, 0x72, 0xa6, 0x82, 0xf1, 0x6d, 0x14, 0xc9,
	0x30, 0xc5, 0x13, 0xf0, 0x32, 0x19, 0x5b, 0xcf, 0x7b, 0xf6, 0x85, 0x2c, 0x93, 0xa2, 0xb4, 0x93,
	0x11, 0x78, 0x11, 0xed, 0xf4, 0x43, 0x79, 0x0d, 0x82, 0xab, 0x69, 0xa7, 0x2d, 0xa4, 0x2f, 0xac,
	0xbe, 0xbc, 0x85, 0xc1, 0x3f, 0x44, 0x04, 0xe8, 0xdf, 0x85, 0xab, 0xb9, 0x78, 0x0d, 0xf6, 0xd0,
	0x03, 0x37, 0x5a, 0xbc, 0x44, 0x81, 0x83, 0x0c, 0xba, 0xf3, 0xfb, 0x65, 0xd0, 0xc1, 0x01, 0xb0,
	0xf5, 0x62, 0xbd, 0x0e, 0x9f, 0x56, 0x41, 0xf7, 0xad, 0x6f, 0xbf, 0xe3, 0xe6, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x45, 0x11, 0x62, 0x4d, 0xa9, 0x01, 0x00, 0x00,
}
